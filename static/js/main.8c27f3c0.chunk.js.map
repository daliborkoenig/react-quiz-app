{"version":3,"sources":["Images/icon.svg","Images/logo-solo.svg","Components.js/Categories.jsx","Components.js/Result.jsx","Components.js/Questions.jsx","Components.js/Home.jsx","App.js","index.js"],"names":["Categories","props","useState","setCategories","useEffect","cat","trivia_categories","forEach","element","name","includes","replace","className","Form","onSubmit","e","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","chooseCat","category","level","reset","Group","Select","required","value","map","id","Math","random","Button","type","Result","history","useHistory","console","log","perc","score","toFixed","onClick","push","percentage","shuffle","array","counter","length","index","floor","temp","Questions","qNum","setQnum","show","setShow","colors","question","questions","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","qa","setQa","answer","correct","i","allAnsw","setAllAnsw","parse","style","backgroundColor","item","el","anime","targets","parentElement","translateX","duration","changeScore","Home","api","setApi","setScore","useFetch","isLoading","error","data","lvl","a","src","logo","alt","results","icon","App","exact","path","render","to","pathname","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8c27f3c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.cd3a4963.svg\";","export default __webpack_public_path__ + \"static/media/logo-solo.872b95bc.svg\";","import React , { useState , useEffect } from 'react'\nimport { Button, Form } from 'react-bootstrap'\n\nfunction Categories(props) {\n  const [categories, setCategories] = useState([])\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const formData = new FormData(e.target),\n    formDataObj = Object.fromEntries(formData.entries())\n    props.chooseCat(formDataObj.category, formDataObj.level)\n    e.target.reset();\n  }\n  useEffect(() => {\n    let cat = props.trivia_categories\n    cat.forEach(element => {\n      if(element.name.includes(\"Entertainment: \")){\n        element.name = element.name.replace(\"Entertainment: \", \"\")\n      }\n      else if(element.name.includes(\"Science: \")){\n        element.name = element.name.replace(\"Science: \", \"\")\n      }\n      return element\n    });\n    setCategories(cat)\n  }, [props])\n  return (\n    <div className=\"categories\">\n      <Form className=\"form\" onSubmit={handleSubmit}>\n        <Form.Group>\n          {/* <Form.Label>Choose a category</Form.Label> */}\n          <Form.Select required aria-label=\"categories\" name=\"category\">\n            <option value=\"\">Choose a category</option>\n            {props.trivia_categories.map(cat => <option key={Math.random()}value={cat.id}>{cat.name}</option>)}\n          </Form.Select>\n        </Form.Group>\n        <Form.Group>\n          {/* <Form.Label>Choose difficulty</Form.Label> */}\n          <Form.Select required aria-label=\"categories\" name=\"level\">\n            <option value=\"\">Choose difficulty</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </Form.Select>\n        </Form.Group>\n        <Button type=\"submit\">Let's go!</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default Categories\n","import React from 'react'\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Result(props) {\n  let history = useHistory();\n  console.log(props);\n  const percentage = () => {\n    let perc = ((100 * props.score) / 12).toFixed(2)\n    return (\n      <div className=\"result\">\n        <h1>You answered {props.score} {props.score === 1 ? \"question\" : \"questions\"} correctly!</h1>\n        <h1>That is {perc}%</h1>\n        <Button onClick={()=>history.push(\"/\")}>Go Again</Button>\n      </div>\n    )\n  }\n  return (\n    <div className=\"Result\">\n      {percentage()}\n    </div>\n  )\n}\n\nexport default Result\n","import React , { useEffect, useState , useContext , useCallback} from 'react'\nimport anime from 'animejs';\nimport parse from 'html-react-parser'\nimport Result from './Result';\n\nconst shuffle = (array) => {\n  let counter = array.length;\n  while (counter > 0) {\n    let index = Math.floor(Math.random() * counter);\n    counter--;\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n  return array;\n}\n\nfunction Questions(props) {\n  const [qNum, setQnum] = useState(0);\n  const [show, setShow] = useState(false);\n  const [colors,] = useState([\"#D9F5D2\", \"#D2EAF5\", \"#EFD2F5\", \"#E07A7A\"])\n  const [qa, setQa] = useState({\n    question: props.questions[qNum].question,\n    correctAnswer: props.questions[qNum].correct_answer,\n    incorrectAnswers: props.questions[qNum].incorrect_answers,\n  });\n  const [allAnsw, setAllAnsw] = useState(shuffle([{answer: qa.correctAnswer, correct: true}, ...qa.incorrectAnswers.map(i => ({answer: i, correct: false}))]));\n  useEffect(() => {\n    console.log(\"WTF\");\n  }, [props])\n  useEffect(() => {\n    setQa({\n    question: props.questions[qNum].question,\n    correctAnswer: props.questions[qNum].correct_answer,\n    incorrectAnswers: props.questions[qNum].incorrect_answers,\n    })\n  }, [qNum])\n  useEffect(() => {\n    setAllAnsw(shuffle([{answer: qa.correctAnswer, correct: true}, ...qa.incorrectAnswers.map(i => ({answer: i, correct: false}))]))\n  }, [qa])\n  console.log(\"rendering questions\");\n\n  const checkAnswer = (item, el) => {\n    if(qNum !== 11){\n      setQnum(qNum+1)\n      anime({\n        targets: el.parentElement,\n        translateX: [-5,5,0],\n        duration: 100,\n      });\n      if(item){\n        console.log(\"correct\");\n        props.changeScore()\n      }\n    }\n    else{\n      if(item){\n        console.log(\"correct\");\n        props.changeScore()\n      }\n      setShow(true)\n    }    \n  }\n  console.log(props);\n  return (\n    <div className=\"quiz\">\n      {!show ? <><p className=\"qNum\">{qNum+1}/{props.questions.length}</p>\n      <div className=\"quiz-qa\">\n        <p className=\"question\">{parse(props.questions[qNum].question)}</p>\n        <div className=\"answers\">{allAnsw.map((answer,i) => <div className=\"answer\" style={{backgroundColor: colors[i]}}><p className=\"answer\" key={Math.random()} id={`${answer.correct}`} onClick={(e)=>{checkAnswer(answer.correct, e.target)}}>{parse(answer.answer)}</p></div>)}</div>\n      </div></> : <Result score={props.score}/>}\n      {/* {qNum.count === 11 && show ? <button onClick={() => {props.showResult()}}>Finish</button> : <button onClick={() => {setQnum(qNum+1); setShow(false)}}>Next Question</button>} */}\n    </div>\n  )\n}\n\nexport default Questions\n","import icon from '../Images/icon.svg'\nimport logo from '../Images/logo-solo.svg'\nimport React, { useState, useContext } from 'react'\nimport useFetch from 'react-fetch-hook';\nimport Categories from './Categories';\nimport Questions from './Questions';\nimport Score from './Score';\nimport Result from './Result';\n\nfunction Home(props) {\n  const [result, setResult] = useState(false);\n  const [api, setApi] = useState({category: null, level: null});\n  const [score, setScore] = useState(0);\n\n  console.log(\"rendering home\");\n  const { isLoading , error , data } = useFetch(`https://opentdb.com/api.php?amount=12&category=${api.category}&difficulty=${api.level}`)\n  if(isLoading) return <div className=\"loading\"><p>...loading</p></div>;\n  if(error) return \"Error: \" + error;\n  const changeScore = () => {\n    console.log(\"changing score\");\n    setScore(score+1)\n  }\n  const showResult = () => {\n    setResult(true)\n  }\n  const chooseCat = async (cat, lvl) => {\n    setApi({category: cat, level: lvl})\n  }\n  console.log(score);\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"logotrip\">\n        <img src={logo} alt=\"logo\" className=\"logo\"/>\n        {data.results.length === 0 && <img src={icon} alt=\"logo-icon\" className=\"icon\"/>}\n        <p>Test your knowledge!</p>\n      </div>\n      {/* <Score score={score}/> */}\n      {data.results.length === 0 && <Categories {...props} chooseCat={chooseCat}/>}\n      {data.results.length > 0 && <Questions score={score} changeScore={changeScore} questions={data.results}/>}\n    </div>\n  )\n}\n\nexport default Home\n","import React , {useReducer, useContext, useState} from 'react';\nimport './App.scss'\nimport Home from './Components.js/Home';\nimport { BrowserRouter, Switch, Route , Redirect } from 'react-router-dom';\nimport useFetch from 'react-fetch-hook';\n\nfunction App() {\n  const {isLoading, error, data} = useFetch('https://opentdb.com/api_category.php')\n  if(isLoading) return <div className=\"loading\"><p>...loading</p></div>;\n  if(error) return \"Error: \" + error;\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/quizalicious\">\n            <Home {...data}/>\n          </Route>           \n          <Route render={() => <Redirect to={{pathname: \"/quizalicious\"}} />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}